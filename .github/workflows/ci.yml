name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        zig-version: ['0.15.1']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: ${{ matrix.zig-version }}

      - name: Verify Zig installation
        run: zig version

      - name: Run tests
        run: zig build test --summary all

      - name: Check for memory leaks
        if: runner.os != 'Windows'
        run: |
          output=$(zig build test 2>&1)
          if echo "$output" | grep -i "leak"; then
            echo "Memory leaks detected!"
            echo "$output"
            exit 1
          fi
          echo "No memory leaks detected ✓"

      - name: Build project
        run: zig build

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.15.1'

      - name: Check formatting
        run: |
          zig fmt --check src/
          echo "Code formatting check passed ✓"

  build-release:
    name: Build Release Mode
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.15.1'

      - name: Build in ReleaseFast mode
        run: zig build -Doptimize=ReleaseFast

      - name: Build in ReleaseSafe mode
        run: zig build -Doptimize=ReleaseSafe

      - name: Build in ReleaseSmall mode
        run: zig build -Doptimize=ReleaseSmall

  coverage:
    name: Test Coverage Report
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.15.1'

      - name: Run tests with summary
        run: |
          echo "## Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          zig build test --summary all 2>&1 | tee test_output.txt
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          tail -10 test_output.txt >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

