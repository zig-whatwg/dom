name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        zig-version: ['0.15.1']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: ${{ matrix.zig-version }}

      - name: Verify Zig installation
        run: zig version

      - name: Run tests
        run: zig build test --summary all

      - name: Check for memory leaks
        if: runner.os != 'Windows'
        run: |
          output=$(zig build test 2>&1)
          if echo "$output" | grep -i "leak"; then
            echo "Memory leaks detected!"
            echo "$output"
            exit 1
          fi
          echo "No memory leaks detected ✓"

      - name: Build project
        run: zig build

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.15.1'

      - name: Check formatting
        run: |
          zig fmt --check src/
          echo "Code formatting check passed ✓"

  build-release:
    name: Build Release Mode
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.15.1'

      - name: Build in ReleaseFast mode
        run: zig build -Doptimize=ReleaseFast

      - name: Build in ReleaseSafe mode
        run: zig build -Doptimize=ReleaseSafe

      - name: Build in ReleaseSmall mode
        run: zig build -Doptimize=ReleaseSmall

  coverage:
    name: Test Coverage Report
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.15.1'

      - name: Run tests with summary
        run: |
          echo "## Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          zig build test --summary all 2>&1 | tee test_output.txt
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          tail -10 test_output.txt >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  docs:
    name: Documentation Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check documentation files exist
        run: |
          files=(
            "README.md"
            "LICENSE"
            "PROGRESS_SUMMARY.md"
            "PROJECT_COMPLETE.md"
            "SESSION_HANDOFF.md"
          )
          for file in "${files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "Missing documentation file: $file"
              exit 1
            fi
            echo "✓ Found $file"
          done
          echo "All documentation files present ✓"

      - name: Check README badges
        run: |
          if ! grep -q "badge" README.md; then
            echo "README.md appears to be missing badges"
            exit 1
          fi
          echo "README.md badges check passed ✓"

  status-check:
    name: CI Status Check
    runs-on: ubuntu-latest
    needs: [test, lint, build-release, coverage, docs]
    if: always()
    
    steps:
      - name: Check all jobs status
        run: |
          if [ "${{ needs.test.result }}" != "success" ] || \
             [ "${{ needs.lint.result }}" != "success" ] || \
             [ "${{ needs.build-release.result }}" != "success" ] || \
             [ "${{ needs.coverage.result }}" != "success" ] || \
             [ "${{ needs.docs.result }}" != "success" ]; then
            echo "One or more CI jobs failed"
            exit 1
          fi
          echo "All CI jobs passed successfully! ✓"
