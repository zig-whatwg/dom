name: Nightly Tests

on:
  schedule:
    # Run at 2 AM UTC every day
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  test-zig-master:
    name: Test with Zig Master
    runs-on: ubuntu-latest
    continue-on-error: true
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Zig (master)
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: master

      - name: Verify Zig version
        run: zig version

      - name: Run tests
        id: tests
        continue-on-error: true
        run: zig build test --summary all

      - name: Report status
        run: |
          if [ "${{ steps.tests.outcome }}" = "success" ]; then
            echo "✓ Tests pass with Zig master"
          else
            echo "✗ Tests fail with Zig master (this is informational only)"
          fi

  memory-leak-extended:
    name: Extended Memory Leak Testing
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.15.1'

      - name: Install Valgrind
        run: sudo apt-get update && sudo apt-get install -y valgrind

      - name: Run tests under Valgrind (if applicable)
        continue-on-error: true
        run: |
          # This is informational - Zig tests may not work directly with Valgrind
          echo "Memory leak testing via Zig's allocator"
          zig build test --summary all

      - name: Check for any memory issues
        run: |
          output=$(zig build test 2>&1)
          if echo "$output" | grep -i "leak"; then
            echo "Memory leaks detected in nightly run!"
            exit 1
          fi
          echo "No memory leaks in extended testing ✓"

  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.15.1'

      - name: Build benchmarks
        run: |
          echo "Building release mode for performance testing"
          zig build -Doptimize=ReleaseFast

      - name: Measure build time
        run: |
          echo "## Build Performance" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          time_output=$( { time zig build -Doptimize=ReleaseFast 2>&1; } 2>&1 )
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "$time_output" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Measure test time
        run: |
          echo "## Test Performance" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          time_output=$( { time zig build test --summary all 2>&1; } 2>&1 )
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "$time_output" | tail -20 >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  dependency-check:
    name: Dependency Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Check build.zig.zon
        run: |
          if [ -f build.zig.zon ]; then
            echo "✓ build.zig.zon found"
            cat build.zig.zon
          fi

      - name: Verify no external dependencies
        run: |
          echo "Checking for minimal dependencies..."
          if grep -q "dependencies" build.zig.zon; then
            echo "Dependencies found in build.zig.zon"
            grep -A 10 "dependencies" build.zig.zon || true
          else
            echo "✓ No external dependencies - standalone library"
          fi

  cross-compile:
    name: Cross-compilation Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-linux
          - x86_64-windows
          - x86_64-macos
          - aarch64-linux
          - aarch64-macos
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.15.1'

      - name: Cross-compile for ${{ matrix.target }}
        run: |
          echo "Cross-compiling for ${{ matrix.target }}"
          zig build -Dtarget=${{ matrix.target }} -Doptimize=ReleaseFast

  report:
    name: Nightly Report
    runs-on: ubuntu-latest
    needs: [test-zig-master, memory-leak-extended, benchmark, dependency-check, cross-compile]
    if: always()
    
    steps:
      - name: Generate report
        run: |
          echo "# Nightly Test Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date**: $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Job Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Zig Master: ${{ needs.test-zig-master.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Memory Testing: ${{ needs.memory-leak-extended.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Benchmarks: ${{ needs.benchmark.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Dependencies: ${{ needs.dependency-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Cross-compile: ${{ needs.cross-compile.result }}" >> $GITHUB_STEP_SUMMARY
